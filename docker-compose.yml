---
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile-api
    env_file: .env
    image: zorak-api:latest
    ports:
      - "5000:5000"
    networks:
      - zorak
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    container_name: db
    build:
      context: .
      dockerfile: Dockerfile-db
    env_file: .env
    image: zorak-postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - zorak
    restart: unless-stopped
    user: "postgres"
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  zorak:
    driver: bridge

volumes:
  postgres-data:
